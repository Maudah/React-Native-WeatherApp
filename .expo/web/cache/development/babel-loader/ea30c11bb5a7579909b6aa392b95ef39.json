{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _GetLocation = _interopRequireDefault(require(\"../components/GetLocation\"));\n\nvar _ForecastList = _interopRequireDefault(require(\"../components/ForecastList\"));\n\nvar Location = _interopRequireWildcard(require(\"expo-location\"));\n\nvar Permissions = _interopRequireWildcard(require(\"expo-permissions\"));\n\nvar _reactAutobind = _interopRequireDefault(require(\"react-autobind\"));\n\nvar _reactNativeGeocoding = _interopRequireDefault(require(\"react-native-geocoding\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\litalush\\\\work\\\\PropertyFinder\\\\src\\\\containers\\\\App.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar App = function (_Component) {\n  (0, _inherits2.default)(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, App);\n\n    _reactNativeGeocoding.default.init('AIzaSyBEA7HIZFZs89iLnh1uKdXaFc5gRSVi27E');\n\n    _this = _super.call(this);\n    (0, _reactAutobind.default)((0, _assertThisInitialized2.default)(_this));\n    state = {\n      location: null,\n      geocode: null,\n      errorMessage: \"\"\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getLocationAsync = function getLocationAsync() {\n        var _await$Permissions$as, status, location, _location$coords, latitude, longitude;\n\n        return _regenerator.default.async(function getLocationAsync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regenerator.default.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n              case 2:\n                _await$Permissions$as = _context.sent;\n                status = _await$Permissions$as.status;\n\n                if (status !== 'granted') {\n                  _this2.setState({\n                    errorMessage: 'Permission to access location was denied'\n                  });\n                }\n\n                _context.next = 7;\n                return _regenerator.default.awrap(Location.getCurrentPositionAsync({\n                  accuracy: Location.Accuracy.Highest\n                }));\n\n              case 7:\n                location = _context.sent;\n                _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n\n                _this2.getGeocodeAsync({\n                  latitude: latitude,\n                  longitude: longitude\n                });\n\n                _this2.setState({\n                  location: {\n                    lat: latitude,\n                    lng: longitude\n                  }\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var location = this.state.location;\n      return _react.default.createElement(_View.default, {\n        style: styles.container,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, location && _react.default.createElement(_View.default, {\n        style: styles.banner,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }\n      }, _react.default.createElement(_GetLocation.default, {\n        location: location,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      })), location && _react.default.createElement(_ForecastList.default, {\n        latitude: location.lat,\n        longitude: location.lng,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }\n      }));\n    }\n  }]);\n  return App;\n}(_react.Component);\n\nexports.default = App;\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF'\n  },\n  banner: {\n    fontSize: 10,\n    textAlign: 'center',\n    padding: 10,\n    backgroundColor: '#80A4E4',\n    borderColor: '#80A4E4'\n  }\n});","map":{"version":3,"sources":["C:/Users/litalush/work/PropertyFinder/src/containers/App.jsx"],"names":["App","Geocoder","init","state","location","geocode","errorMessage","getLocationAsync","Permissions","askAsync","LOCATION","status","setState","Location","getCurrentPositionAsync","accuracy","Accuracy","Highest","coords","latitude","longitude","getGeocodeAsync","lat","lng","styles","container","banner","Component","StyleSheet","create","flex","backgroundColor","fontSize","textAlign","padding","borderColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAEA;;AACA;;AAEA;;AACA;;AAGA;;AACA;;;;;;;;IAGqBA,G;;;;;AAEnB,iBAAc;AAAA;;AAAA;;AACZC,kCAASC,IAAT,CAAc,yCAAd;;AACA;AACA;AACAC,IAAAA,KAAK,GAAE;AACLC,MAAAA,QAAQ,EAAC,IADJ;AAELC,MAAAA,OAAO,EAAC,IAFH;AAGLC,MAAAA,YAAY,EAAC;AAHR,KAAP;AAJY;AAmBb;;;;wCACkB;AAAA;;AACjBC,MAAAA,gBAAgB,GAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACMC,WAAW,CAACC,QAAZ,CAAqBD,WAAW,CAACE,QAAjC,CADN;;AAAA;AAAA;AACXC,gBAAAA,MADW,yBACXA,MADW;;AAEjB,oBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxB,kBAAA,MAAI,CAACC,QAAL,CAAc;AACZN,oBAAAA,YAAY,EAAE;AADF,mBAAd;AAGD;;AANgB;AAAA,kDAQIO,QAAQ,CAACC,uBAAT,CAAiC;AAACC,kBAAAA,QAAQ,EAACF,QAAQ,CAACG,QAAT,CAAkBC;AAA5B,iBAAjC,CARJ;;AAAA;AAQbb,gBAAAA,QARa;AAAA,mCASgBA,QAAQ,CAACc,MATzB,EASTC,QATS,oBASTA,QATS,EASEC,SATF,oBASEA,SATF;;AAUjB,gBAAA,MAAI,CAACC,eAAL,CAAqB;AAACF,kBAAAA,QAAQ,EAARA,QAAD;AAAWC,kBAAAA,SAAS,EAATA;AAAX,iBAArB;;AACA,gBAAA,MAAI,CAACR,QAAL,CAAc;AAAER,kBAAAA,QAAQ,EAAE;AAACkB,oBAAAA,GAAG,EAAEH,QAAN;AAAeI,oBAAAA,GAAG,EAAEH;AAApB;AAAZ,iBAAd;;AAXiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnB;AAcD;;;6BAEQ;AAAA,UACAhB,QADA,GACW,KAAKD,KADhB,CACAC,QADA;AAEP,aACE,6BAAC,aAAD;AAAM,QAAA,KAAK,EAAEoB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGrB,QAAQ,IAAE,6BAAC,aAAD;AAAM,QAAA,KAAK,EAAEoB,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACX,6BAAC,oBAAD;AAAe,QAAA,QAAQ,EAAEtB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,CADb,EAIGA,QAAQ,IAAE,6BAAC,qBAAD;AAAc,QAAA,QAAQ,EAAEA,QAAQ,CAACkB,GAAjC;AAAsC,QAAA,SAAS,EAAElB,QAAQ,CAACmB,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJb,CADF;AAQD;;;EAjD8BI,gB;;;;AAoDjC,IAAMH,MAAM,GAAGI,oBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADoB;AAK/BL,EAAAA,MAAM,EAAE;AACJM,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,OAAO,EAAE,EAHL;AAIJH,IAAAA,eAAe,EAAE,SAJb;AAKJI,IAAAA,WAAW,EAAC;AALR;AALuB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {StyleSheet, View, Text} from 'react-native';\nimport MyGetLocation from '../components/GetLocation';\nimport ForecastList from '../components/ForecastList';\n\nimport * as Location from 'expo-location';\nimport * as Permissions from 'expo-permissions';\n\n// import Geolocation from '@react-native-community/geolocation';\nimport autoBind from 'react-autobind';\nimport Geocoder from 'react-native-geocoding';  \n\n\nexport default class App extends Component {\n\n  constructor() {\n    Geocoder.init('AIzaSyBEA7HIZFZs89iLnh1uKdXaFc5gRSVi27E');\n    super();\n    autoBind(this);\n    state= {\n      location:null,\n      geocode:null,\n      errorMessage:\"\"\n    }\n    // Geolocation.getCurrentPosition(info => {\n    //   console.log('info------');\n    //   console.log(info.coords.latitude);\n    //   console.log(info.coords.longitude);\n    //   this.setState({location:{\n    //     lat:info.coords.latitude,\n    //     lng:info.coords.longitude\n    //   }})\n    // });\n    \n  }\n  componentDidMount(){\n    getLocationAsync = async () => {\n      let { status } = await Permissions.askAsync(Permissions.LOCATION);\n      if (status !== 'granted') {\n        this.setState({\n          errorMessage: 'Permission to access location was denied',\n        });\n      }\n  \n      let location = await Location.getCurrentPositionAsync({accuracy:Location.Accuracy.Highest});\n      const { latitude , longitude } = location.coords\n      this.getGeocodeAsync({latitude, longitude})\n      this.setState({ location: {lat: latitude,lng: longitude}});\n  \n    };\n  }\n\n  render() {\n    const {location} =this.state;\n    return (\n      <View style={styles.container}>\n        {location&&<View style={styles.banner}>\n        <MyGetLocation location={location}/>\n        </View>}\n        {location&&<ForecastList latitude={location.lat} longitude={location.lng}/>}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n      flex: 1,\n      backgroundColor: '#F5FCFF',\n  },\n  banner: {\n      fontSize: 10,\n      textAlign: 'center',\n      padding: 10,\n      backgroundColor: '#80A4E4',\n      borderColor:'#80A4E4',\n  },\n});\n\n"]},"metadata":{},"sourceType":"script"}