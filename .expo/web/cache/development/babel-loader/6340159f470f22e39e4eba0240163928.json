{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Image = _interopRequireDefault(require(\"react-native-web/dist/exports/Image\"));\n\nvar _FlatList = _interopRequireDefault(require(\"react-native-web/dist/exports/FlatList\"));\n\nvar _Dimensions = _interopRequireDefault(require(\"react-native-web/dist/exports/Dimensions\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _accordionCollapseReactNative = require(\"accordion-collapse-react-native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\litalush\\\\work\\\\PropertyFinder\\\\src\\\\components\\\\MyForecastCard\\\\index.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar MyForecastCard = function (_Component) {\n  (0, _inherits2.default)(MyForecastCard, _Component);\n\n  var _super = _createSuper(MyForecastCard);\n\n  function MyForecastCard() {\n    (0, _classCallCheck2.default)(this, MyForecastCard);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(MyForecastCard, [{\n    key: \"_renderHeader\",\n    value: function _renderHeader() {\n      var date = new Date(this.props.detail[0].dt * 1000);\n      var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      var dayOfWeek = days[date.getDay()];\n      var deg = Math.round(this.props.detail[0].main.temp * 10) / 10;\n      var image = {\n        uri: \"https://openweathermap.org/img/w/\" + this.props.detail[parseInt(this.props.detail.length / 2)].weather[0].icon + \".png\"\n      };\n      return _react.default.createElement(_View.default, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeElements.Text, {\n        style: {\n          color: 'white',\n          fontSize: 15,\n          paddingLeft: 5\n        },\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, dayOfWeek), _react.default.createElement(_View.default, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeElements.Text, {\n        style: {\n          color: 'white',\n          paddingTop: 15,\n          fontSize: 15\n        },\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, deg, \"\\xB0\"), _react.default.createElement(_Image.default, {\n        style: {\n          width: 50,\n          height: 50\n        },\n        source: image,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"_renderWeatherList\",\n    value: function _renderWeatherList(item) {\n      var time;\n      var date = new Date(item.item.dt * 1000);\n      var hours = date.getHours();\n      var minutes = \"0\" + date.getMinutes();\n      time = hours + ':' + minutes.substr(-2);\n      return _react.default.createElement(_View.default, {\n        style: {\n          paddingHorizontal: 10\n        },\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeElements.Text, {\n        style: styles.time,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, time), _react.default.createElement(_Image.default, {\n        style: {\n          width: 40,\n          height: 40\n        },\n        source: {\n          uri: \"https://openweathermap.org/img/w/\" + item.item.weather[0].icon + \".png\"\n        },\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_View.default, {\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeElements.Text, {\n        style: styles.time,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, Math.round(item.item.main.temp * 10) / 10, \"\\xB0\")));\n    }\n  }, {\n    key: \"_renderContent\",\n    value: function _renderContent() {\n      var windowWidth = _Dimensions.default.get('window').width;\n\n      var content = this.props.content;\n      var date = new Date(content.sunrise * 1000);\n      var hours = date.getHours();\n      var minutes = \"0\" + date.getMinutes();\n      var sunrise = hours + ':' + minutes.substr(-2);\n      var date = new Date(content.sunset * 1000);\n      var hours = date.getHours();\n      var minutes = \"0\" + date.getMinutes();\n      var sunset = hours + ':' + minutes.substr(-2);\n      return _react.default.createElement(_View.default, {\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_FlatList.default, {\n        style: {\n          width: windowWidth * 0.9\n        },\n        horizontal: true,\n        pagingEnabled: true,\n        key: function key(item) {\n          return item.dt_text;\n        },\n        showsHorizontalScrollIndicator: false,\n        data: this.props.detail,\n        renderItem: this._renderWeatherList,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }), _react.default.createElement(_reactNativeElements.Divider, {\n        style: {\n          backgroundColor: '#dfe6e9',\n          marginVertical: 10\n        },\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_View.default, {\n        style: styles.card,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_accordionCollapseReactNative.Collapse, {\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_accordionCollapseReactNative.CollapseHeader, {\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, this._renderHeader()), _react.default.createElement(_accordionCollapseReactNative.CollapseBody, {\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, this._renderContent())));\n    }\n  }]);\n  return MyForecastCard;\n}(_react.Component);\n\nexports.default = MyForecastCard;\n\nvar styles = _StyleSheet.default.create({\n  card: {\n    padding: 15\n  },\n  time: {\n    fontSize: 14,\n    color: 'white'\n  },\n  notes: {\n    paddingHorizontal: 5,\n    fontSize: 15\n  },\n  headerText: {\n    paddingHorizontal: 5,\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/litalush/work/PropertyFinder/src/components/MyForecastCard/index.jsx"],"names":["MyForecastCard","date","Date","props","detail","dt","days","dayOfWeek","getDay","deg","Math","round","main","temp","image","uri","parseInt","length","weather","icon","flexDirection","justifyContent","alignItems","color","fontSize","paddingLeft","paddingTop","width","height","item","time","hours","getHours","minutes","getMinutes","substr","paddingHorizontal","styles","windowWidth","Dimensions","get","content","sunrise","sunset","dt_text","_renderWeatherList","backgroundColor","marginVertical","card","_renderHeader","_renderContent","Component","StyleSheet","create","padding","notes","headerText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, View, Image, FlatList, Dimensions } from 'react-native';\r\nimport { Text, Divider } from 'react-native-elements';\r\nimport { Collapse, CollapseHeader, CollapseBody } from 'accordion-collapse-react-native';\r\nexport default class MyForecastCard extends Component {\r\n\r\n  _renderHeader() {\r\n    var date = new Date(this.props.detail[0].dt * 1000);\r\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var dayOfWeek = days[date.getDay()]\r\n    var deg = Math.round(this.props.detail[0].main.temp * 10) / 10;\r\n    var image = { uri: \"https://openweathermap.org/img/w/\" + this.props.detail[parseInt(this.props.detail.length / 2)].weather[0].icon + \".png\" }\r\n    return (\r\n      <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Text style={{ color: 'white', fontSize: 15, paddingLeft: 5 }}>{dayOfWeek}</Text>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <Text style={{ color: 'white', paddingTop: 15, fontSize: 15 }}>{deg}&#176;</Text>\r\n          <Image style={{ width: 50, height: 50 }} source={image} />\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n  _renderWeatherList(item) {\r\n    let time;\r\n    var date = new Date(item.item.dt * 1000);\r\n    var hours = date.getHours();\r\n    var minutes = \"0\" + date.getMinutes();\r\n    time = hours + ':' + minutes.substr(-2);\r\n    return (\r\n      <View style={{paddingHorizontal: 10}}>\r\n        <Text style={styles.time}>{time}</Text>\r\n        <Image style={{ width: 40, height: 40 }} source={{ uri: \"https://openweathermap.org/img/w/\" + item.item.weather[0].icon + \".png\" }} />\r\n        <View>\r\n          <Text style={styles.time}>{Math.round(item.item.main.temp * 10) / 10}&#176;</Text>\r\n        </View>\r\n      </View>\r\n\r\n    )\r\n  }\r\n  _renderContent() {\r\n    const windowWidth = Dimensions.get('window').width;\r\n    const { content } = this.props;\r\n    var date = new Date(content.sunrise * 1000);\r\n    var hours = date.getHours();\r\n    var minutes = \"0\" + date.getMinutes();\r\n    let sunrise = hours + ':' + minutes.substr(-2);\r\n    var date = new Date(content.sunset * 1000);\r\n    var hours = date.getHours();\r\n    var minutes = \"0\" + date.getMinutes();\r\n    let sunset = hours + ':' + minutes.substr(-2);\r\n\r\n    return (<View>\r\n      <FlatList\r\n        style={{ width: windowWidth * 0.9}}\r\n        horizontal\r\n        pagingEnabled={true}\r\n        key={item => item.dt_text}\r\n        showsHorizontalScrollIndicator={false}\r\n        data={this.props.detail}\r\n        renderItem={this._renderWeatherList}\r\n      />\r\n            <Divider style={{ backgroundColor: '#dfe6e9', marginVertical: 10 }} />\r\n      {/* <Text style={styles.notes}>Sunrise: {sunrise}</Text>\r\n      <Text style={styles.notes}>Sunset: {sunset}</Text>\r\n      <Text style={styles.notes}>{content.description}</Text>\r\n      <Text style={styles.notes}> {content.wind.spead} {content.wind.deg}</Text> */}\r\n    </View>);\r\n  }\r\n  render() {\r\n    return (\r\n      <View style={styles.card}>\r\n        <Collapse>\r\n          <CollapseHeader>\r\n            {this._renderHeader()}\r\n          </CollapseHeader>\r\n          <CollapseBody>\r\n            {this._renderContent()}\r\n          </CollapseBody>\r\n        </Collapse>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    padding: 15,\r\n  },\r\n  time: {\r\n    fontSize: 14,\r\n    color: 'white',\r\n  },\r\n  notes: {\r\n    paddingHorizontal: 5,\r\n    fontSize: 15,\r\n  },\r\n  headerText: {\r\n    paddingHorizontal: 5,\r\n    fontSize: 15,\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}