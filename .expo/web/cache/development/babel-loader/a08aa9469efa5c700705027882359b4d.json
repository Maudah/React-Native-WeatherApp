{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _FlatList = _interopRequireDefault(require(\"react-native-web/dist/exports/FlatList\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _MyForecastCard = _interopRequireDefault(require(\"../MyForecastCard\"));\n\nvar _reactAutobind = _interopRequireDefault(require(\"react-autobind\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\litalush\\\\work\\\\PropertyFinder\\\\src\\\\components\\\\ForecastList\\\\index.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ForecastList = function (_Component) {\n  (0, _inherits2.default)(ForecastList, _Component);\n\n  var _super = _createSuper(ForecastList);\n\n  function ForecastList() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ForecastList);\n    _this = _super.call(this);\n    (0, _reactAutobind.default)((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      list: [],\n      dataForContent: []\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ForecastList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.HoursListToDailyList();\n    }\n  }, {\n    key: \"HoursListToDailyList\",\n    value: function HoursListToDailyList() {\n      var dataForContent1 = {\n        sunset: this.props.forecast.city.sunset,\n        sunrise: this.props.forecast.city.sunrise,\n        wind: this.props.forecast.list[0].wind\n      };\n      var date = this.props.forecast.list[0].dt_txt;\n      var res = date.substr(8, 2);\n      var currentList = [];\n      var result = [];\n      this.props.forecast.list.map(function (item) {\n        if (res === item.dt_txt.substr(8, 2)) {\n          currentList.push(item);\n        } else {\n          res = item.dt_txt.substr(8, 2);\n          result.push(currentList);\n          currentList = [];\n        }\n      });\n      this.setState({\n        list: result,\n        dataForContent: dataForContent1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_View.default, {\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }\n      }, this.state && _react.default.createElement(_FlatList.default, {\n        data: this.state.list,\n        style: {\n          backgroundColor: 'rgba(255, 255, 255, 0.1)'\n        },\n        key: function key(item) {\n          return item.dt_text;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _react.default.createElement(_MyForecastCard.default, {\n            detail: item,\n            content: _this2.state.dataForContent,\n            location: _this2.props.forecast.city.name,\n            __self: _this2,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 47\n            }\n          });\n        },\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 20\n        }\n      }));\n    }\n  }]);\n  return ForecastList;\n}(_react.Component);\n\nexports.default = ForecastList;\n\nvar styles = _StyleSheet.default.create({\n  card: {\n    backgroundColor: 'rgba(56, 172, 236, 1)',\n    borderWidth: 0,\n    borderRadius: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/litalush/work/PropertyFinder/src/components/ForecastList/index.jsx"],"names":["ForecastList","state","list","dataForContent","HoursListToDailyList","dataForContent1","sunset","props","forecast","city","sunrise","wind","date","dt_txt","res","substr","currentList","result","map","item","push","setState","backgroundColor","dt_text","name","Component","styles","StyleSheet","create","card","borderWidth","borderRadius"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAEA;;AACA;;;;;;;;IAEqBA,Y;;;;;AACnB,0BAAc;AAAA;;AAAA;AACZ;AACA;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,cAAc,EAAE;AAFL,KAAb;AAHY;AAOb;;;;wCAEgB;AACjB,WAAKC,oBAAL;AACD;;;2CACuB;AACpB,UAAIC,eAAe,GAAC;AAClBC,QAAAA,MAAM,EAAC,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBH,MADd;AAElBI,QAAAA,OAAO,EAAC,KAAKH,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,OAFf;AAGlBC,QAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,QAAX,CAAoBN,IAApB,CAAyB,CAAzB,EAA4BS;AAHhB,OAApB;AAKA,UAAIC,IAAI,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBN,IAApB,CAAyB,CAAzB,EAA4BW,MAAvC;AACA,UAAIC,GAAG,GAAGF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAV;AACA,UAAIC,WAAW,GAAC,EAAhB;AACA,UAAIC,MAAM,GAAC,EAAX;AAEA,WAAKV,KAAL,CAAWC,QAAX,CAAoBN,IAApB,CAAyBgB,GAAzB,CAA6B,UAACC,IAAD,EAAQ;AACnC,YAAGL,GAAG,KAAGK,IAAI,CAACN,MAAL,CAAYE,MAAZ,CAAmB,CAAnB,EAAqB,CAArB,CAAT,EAAiC;AAC/BC,UAAAA,WAAW,CAACI,IAAZ,CAAiBD,IAAjB;AACD,SAFD,MAEM;AACJL,UAAAA,GAAG,GAACK,IAAI,CAACN,MAAL,CAAYE,MAAZ,CAAmB,CAAnB,EAAqB,CAArB,CAAJ;AACAE,UAAAA,MAAM,CAACG,IAAP,CAAYJ,WAAZ;AACAA,UAAAA,WAAW,GAAC,EAAZ;AACD;AACF,OARD;AASA,WAAKK,QAAL,CAAc;AAACnB,QAAAA,IAAI,EAAEe,MAAP;AAAed,QAAAA,cAAc,EAAEE;AAA/B,OAAd;AACD;;;6BACM;AAAA;;AACP,aACE,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKJ,KAAL,IAAY,6BAAC,iBAAD;AAAU,QAAA,IAAI,EAAE,KAAKA,KAAL,CAAWC,IAA3B;AACG,QAAA,KAAK,EAAE;AAACoB,UAAAA,eAAe,EAAE;AAAlB,SADV;AAEG,QAAA,GAAG,EAAE,aAAAH,IAAI;AAAA,iBAAIA,IAAI,CAACI,OAAT;AAAA,SAFZ;AAGG,QAAA,UAAU,EAAE;AAAA,cAAEJ,IAAF,QAAEA,IAAF;AAAA,iBAAY,6BAAC,uBAAD;AAAc,YAAA,MAAM,EAAEA,IAAtB;AAA4B,YAAA,OAAO,EAAG,MAAI,CAAClB,KAAL,CAAWE,cAAjD;AAAiE,YAAA,QAAQ,EAAE,MAAI,CAACI,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBe,IAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADf,CADF;AAQD;;;EA5CyCC,gB;;;;AA+C1C,IAAMC,MAAM,GAAGC,oBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAC;AACHP,IAAAA,eAAe,EAAC,uBADb;AAEHQ,IAAAA,WAAW,EAAC,CAFT;AAGHC,IAAAA,YAAY,EAAC;AAHV;AAD0B,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { FlatList, StyleSheet, View } from 'react-native';\r\nimport ForecastCard from '../MyForecastCard';\r\nimport autoBind from 'react-autobind';\r\n\r\nexport default class ForecastList extends Component {\r\n  constructor() {\r\n    super();\r\n    autoBind(this);\r\n    this.state = {\r\n      list: [],\r\n      dataForContent: [],\r\n    };\r\n  }\r\n\r\ncomponentDidMount(){\r\n  this.HoursListToDailyList();\r\n}\r\n  HoursListToDailyList(){\r\n    var dataForContent1={\r\n      sunset:this.props.forecast.city.sunset,\r\n      sunrise:this.props.forecast.city.sunrise,\r\n      wind: this.props.forecast.list[0].wind,\r\n    }\r\n    var date = this.props.forecast.list[0].dt_txt;\r\n    var res = date.substr(8, 2);\r\n    var currentList=[];\r\n    var result=[];\r\n\r\n    this.props.forecast.list.map((item)=>{\r\n      if(res===item.dt_txt.substr(8,2)){\r\n        currentList.push(item);\r\n      } else{\r\n        res=item.dt_txt.substr(8,2);\r\n        result.push(currentList);\r\n        currentList=[];\r\n      }\r\n    });\r\n    this.setState({list: result, dataForContent: dataForContent1});\r\n  }\r\nrender() {\r\n  return (\r\n    <View>\r\n      {this.state&&<FlatList data={this.state.list} \r\n                      style={{backgroundColor: 'rgba(255, 255, 255, 0.1)'}} \r\n                      key={item => item.dt_text} \r\n                      renderItem={({item}) => <ForecastCard detail={item} content={ this.state.dataForContent} location={this.props.forecast.city.name} />} />}\r\n    </View>\r\n  );\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card:{\r\n    backgroundColor:'rgba(56, 172, 236, 1)',\r\n    borderWidth:0,\r\n    borderRadius:20\r\n}\r\n});\r\n"]},"metadata":{},"sourceType":"script"}