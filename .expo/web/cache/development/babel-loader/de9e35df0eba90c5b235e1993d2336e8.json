{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _FlatList = _interopRequireDefault(require(\"react-native-web/dist/exports/FlatList\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _ForecastCard = _interopRequireDefault(require(\"../ForecastCard\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\litalush\\\\work\\\\PropertyFinder\\\\src\\\\components\\\\ForecastList\\\\index.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ForecastList = function (_Component) {\n  (0, _inherits2.default)(ForecastList, _Component);\n\n  var _super = _createSuper(ForecastList);\n\n  function ForecastList() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ForecastList);\n    var url = 'https://api.openweathermap.org/data/2.5/forecast?lat=' + _this.props.latitude + '&lon=' + _this.props.longitude + '&units=metric&appid=AIzaSyBEA7HIZFZs89iLnh1uKdXaFc5gRSVi27E';\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      _this.setState(function (prevState, props) {\n        return {\n          forecast: data\n        };\n      });\n    });\n    return (0, _possibleConstructorReturn2.default)(_this);\n  }\n\n  (0, _createClass2.default)(ForecastList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_FlatList.default, {\n        data: this.state.forecast.list,\n        style: {\n          marginTop: 20\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.dt_text;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _react.default.createElement(_ForecastCard.default, {\n            detail: item,\n            location: _this2.state.forecast.city.name,\n            __self: _this2,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 31\n            }\n          });\n        },\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n  return ForecastList;\n}(_react.Component);\n\nexports.default = ForecastList;\n\nvar styles = _StyleSheet.default.create({\n  card: {\n    backgroundColor: 'rgba(56, 172, 236, 1)',\n    borderWidth: 0,\n    borderRadius: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/litalush/work/PropertyFinder/src/components/ForecastList/index.jsx"],"names":["ForecastList","url","props","latitude","longitude","fetch","then","response","json","data","setState","prevState","forecast","state","list","marginTop","item","dt_text","city","name","Component","styles","StyleSheet","create","card","backgroundColor","borderWidth","borderRadius"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA;;;;;;;;IAEqBA,Y;;;;;AACnB,0BAAa;AAAA;;AAAA;AAEX,QAAIC,GAAG,GAAG,0DAA0D,MAAKC,KAAL,CAAWC,QAArE,GAAgF,OAAhF,GAA0F,MAAKD,KAAL,CAAWE,SAArG,GAAiH,6DAA3H;AAEAC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACCK,IADD,CACM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACV,YAAKC,QAAL,CAAc,UAACC,SAAD,EAAYT,KAAZ;AAAA,eAAuB;AACjCU,UAAAA,QAAQ,EAAEH;AADuB,SAAvB;AAAA,OAAd;AAGH,KAND;AAJW;AAWd;;;;6BACQ;AAAA;;AACP,aACI,6BAAC,iBAAD;AAAU,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWD,QAAX,CAAoBE,IAApC;AACA,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX,SADP;AAEA,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,OAAT;AAAA,SAFlB;AAGA,QAAA,UAAU,EAAE;AAAA,cAAED,IAAF,QAAEA,IAAF;AAAA,iBAAY,6BAAC,qBAAD;AAAc,YAAA,MAAM,EAAEA,IAAtB;AAA4B,YAAA,QAAQ,EAAE,MAAI,CAACH,KAAL,CAAWD,QAAX,CAAoBM,IAApB,CAAyBC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMD;;;EApByCC,gB;;;;AAuB1C,IAAMC,MAAM,GAAGC,oBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAC;AACHC,IAAAA,eAAe,EAAC,uBADb;AAEHC,IAAAA,WAAW,EAAC,CAFT;AAGHC,IAAAA,YAAY,EAAC;AAHV;AAD0B,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { FlatList, StyleSheet } from 'react-native';\r\nimport ForecastCard from '../ForecastCard';\r\n\r\nexport default class ForecastList extends Component {\r\n  constructor(){\r\n    // Construct the API url to call\r\n    let url = 'https://api.openweathermap.org/data/2.5/forecast?lat=' + this.props.latitude + '&lon=' + this.props.longitude + '&units=metric&appid=AIzaSyBEA7HIZFZs89iLnh1uKdXaFc5gRSVi27E';\r\n    // Call the API, and set the state of the weather forecast\r\n    fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        this.setState((prevState, props) => ({\r\n            forecast: data\r\n    }));\r\n    })\r\n}\r\nrender() {\r\n  return (\r\n      <FlatList data={this.state.forecast.list} \r\n      style={{marginTop:20}} \r\n      keyExtractor={item => item.dt_text} \r\n      renderItem={({item}) => <ForecastCard detail={item} location={this.state.forecast.city.name} />} />\r\n  );\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card:{\r\n    backgroundColor:'rgba(56, 172, 236, 1)',\r\n    borderWidth:0,\r\n    borderRadius:20\r\n}\r\n});\r\n"]},"metadata":{},"sourceType":"script"}