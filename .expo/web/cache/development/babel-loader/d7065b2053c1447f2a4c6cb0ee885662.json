{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _ImageBackground = _interopRequireDefault(require(\"react-native-web/dist/exports/ImageBackground\"));\n\nvar _Dimensions = _interopRequireDefault(require(\"react-native-web/dist/exports/Dimensions\"));\n\nvar _ActivityIndicator = _interopRequireDefault(require(\"react-native-web/dist/exports/ActivityIndicator\"));\n\nvar _Image = _interopRequireDefault(require(\"react-native-web/dist/exports/Image\"));\n\nvar _GetLocation = _interopRequireDefault(require(\"../../components/GetLocation\"));\n\nvar _ForecastList = _interopRequireDefault(require(\"../../components/ForecastList\"));\n\nvar Location = _interopRequireWildcard(require(\"expo-location\"));\n\nvar Permissions = _interopRequireWildcard(require(\"expo-permissions\"));\n\nvar _reactAutobind = _interopRequireDefault(require(\"react-autobind\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\litalush\\\\work\\\\PropertyFinder\\\\src\\\\containers\\\\MainPage\\\\index.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar App = function (_Component) {\n  (0, _inherits2.default)(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, App);\n    _this = _super.call(this);\n\n    _this.getLocationAsync = function _callee() {\n      var _await$Permissions$as, status, location, _location$coords, latitude, longitude, url;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (status !== 'granted') {\n                _this.setState({\n                  errorMessage: 'Permission  to access location was denied'\n                });\n              }\n\n              _context.next = 7;\n              return _regenerator.default.awrap(Location.getCurrentPositionAsync({\n                accuracy: Location.Accuracy.Highest\n              }));\n\n            case 7:\n              location = _context.sent;\n              _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n              url = 'https://api.openweathermap.org/data/2.5/forecast?lat=' + latitude + '&lon=' + longitude + '&units=metric&appid=34026f1820a73bd0d6e38e6c9931d3e5';\n              fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                console.log('this.props.location-------');\n                console.log(data);\n\n                _this.setState({\n                  forecast: data,\n                  location: {\n                    lat: latitude,\n                    lng: longitude\n                  },\n                  address: data.city.name,\n                  loading: false\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    (0, _reactAutobind.default)((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      location: {\n        lat: 31,\n        lng: 34\n      },\n      loading: true\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLocationAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          address = _this$state.address,\n          location = _this$state.location,\n          forecast = _this$state.forecast,\n          loading = _this$state.loading;\n      var date = new Date();\n      var hours = date.getHours();\n      console.log(hours);\n      var imageURI = {\n        uri: \"https://cdn.dribbble.com/users/925716/screenshots/3333720/attachments/\" + (hours < 4 || hours > 19 ? '722375/night.png' : '722376/after_noon.png')\n      };\n      var locatiovIconURI = {\n        uri: '../../img/icons8-location-24.png'\n      };\n      return _react.default.createElement(_View.default, {\n        style: styles.container,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_ImageBackground.default, {\n        style: styles.image,\n        source: imageURI,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_View.default, {\n        style: styles.innerContainer,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, loading && _react.default.createElement(_ActivityIndicator.default, {\n        size: \"small\",\n        color: \"white\",\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_Image.default, {\n        style: {\n          width: 40,\n          height: 40\n        },\n        source: locatiovIconURI,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_Text.default, {\n        style: styles.text,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, address), forecast && _react.default.createElement(_Text.default, {\n        style: [styles.text, {\n          fontWeight: '500',\n          fontSize: 70,\n          paddingBottom: 10\n        }],\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 26\n        }\n      }, Math.round(forecast.list[0].main.temp * 10) / 10, \"\\xB0\"), forecast && _react.default.createElement(_ForecastList.default, {\n        forecast: forecast,\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 26\n        }\n      }))));\n    }\n  }]);\n  return App;\n}(_react.Component);\n\nexports.default = App;\n\nvar windowHighest = _Dimensions.default.get('window').Highest;\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF'\n  },\n  innerContainer: {\n    display: 'flex',\n    marginTop: 200,\n    justifyContent: 'center'\n  },\n  text: {\n    color: 'white',\n    alignSelf: 'center',\n    fontSize: 20,\n    paddingVertical: 5\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\"\n  }\n});","map":{"version":3,"sources":["C:/Users/litalush/work/PropertyFinder/src/containers/MainPage/index.jsx"],"names":["App","getLocationAsync","Permissions","askAsync","LOCATION","status","setState","errorMessage","Location","getCurrentPositionAsync","accuracy","Accuracy","Highest","location","coords","latitude","longitude","url","fetch","then","response","json","data","console","log","forecast","lat","lng","address","city","name","loading","state","date","Date","hours","getHours","imageURI","uri","locatiovIconURI","styles","container","image","innerContainer","width","height","text","fontWeight","fontSize","paddingBottom","Math","round","list","main","temp","Component","windowHighest","Dimensions","get","StyleSheet","create","flex","backgroundColor","display","marginTop","justifyContent","color","alignSelf","paddingVertical","resizeMode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAEA;;AACA;;AAEA;;AACA;;AAGA;;;;;;;;IAIqBA,G;;;;;AAEnB,iBAAc;AAAA;;AAAA;AACZ;;AADY,UAWdC,gBAXc,GAWK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACMC,WAAW,CAACC,QAAZ,CAAqBD,WAAW,CAACE,QAAjC,CADN;;AAAA;AAAA;AACXC,cAAAA,MADW,yBACXA,MADW;;AAEjB,kBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxB,sBAAKC,QAAL,CAAc;AACZC,kBAAAA,YAAY,EAAE;AADF,iBAAd;AAGD;;AANgB;AAAA,gDAQIC,QAAQ,CAACC,uBAAT,CAAiC;AAAEC,gBAAAA,QAAQ,EAAEF,QAAQ,CAACG,QAAT,CAAkBC;AAA9B,eAAjC,CARJ;;AAAA;AAQbC,cAAAA,QARa;AAAA,iCASeA,QAAQ,CAACC,MATxB,EASTC,QATS,oBASTA,QATS,EASCC,SATD,oBASCA,SATD;AAYXC,cAAAA,GAZW,GAYL,0DACVF,QADU,GACC,OADD,GACWC,SADX,GACuB,sDAblB;AAcjBE,cAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZC,gBAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,sBAAKhB,QAAL,CAAc;AAAEmB,kBAAAA,QAAQ,EAAEH,IAAZ;AAAkBT,kBAAAA,QAAQ,EAAE;AAAEa,oBAAAA,GAAG,EAAEX,QAAP;AAAiBY,oBAAAA,GAAG,EAAEX;AAAtB,mBAA5B;AAA+DY,kBAAAA,OAAO,EAAEN,IAAI,CAACO,IAAL,CAAUC,IAAlF;AAAuFC,kBAAAA,OAAO,EAAE;AAAhG,iBAAd;AACD,eANH;;AAdiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXL;;AAEZ;AACA,UAAKC,KAAL,GAAa;AACXnB,MAAAA,QAAQ,EAAE;AAAEa,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,GAAG,EAAE;AAAhB,OADC;AAEXI,MAAAA,OAAO,EAAE;AAFE,KAAb;AAHY;AAOb;;;;wCACmB;AAClB,WAAK9B,gBAAL;AACD;;;6BAuBQ;AAAA,wBAC0C,KAAK+B,KAD/C;AAAA,UACCJ,OADD,eACCA,OADD;AAAA,UACUf,QADV,eACUA,QADV;AAAA,UACoBY,QADpB,eACoBA,QADpB;AAAA,UAC8BM,OAD9B,eAC8BA,OAD9B;AAEP,UAAIE,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,UAAIC,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAZ;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACA,UAAME,QAAQ,GAAG;AAAEC,QAAAA,GAAG,8EAA2EH,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAArB,GAA0B,kBAA1B,GAA+C,uBAA1H;AAAL,OAAjB;AACA,UAAMI,eAAe,GAAE;AAACD,QAAAA,GAAG,EAAE;AAAN,OAAvB;AACA,aACE,6BAAC,aAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,wBAAD;AAAiB,QAAA,KAAK,EAAED,MAAM,CAACE,KAA/B;AAAsC,QAAA,MAAM,EAAEL,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,aAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACG,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCZ,OAAO,IAAE,6BAAC,0BAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV,EAEA,6BAAC,cAAD;AAAO,QAAA,KAAK,EAAE;AAAEa,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAE;AAArB,SAAd;AAAyC,QAAA,MAAM,EAAEN,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGE,6BAAC,aAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BlB,OAA3B,CAHF,EAIGH,QAAQ,IAAI,6BAAC,aAAD;AAAM,QAAA,KAAK,EAAE,CAACe,MAAM,CAACM,IAAR,EAAc;AAAEC,UAAAA,UAAU,EAAE,KAAd;AAAqBC,UAAAA,QAAQ,EAAE,EAA/B;AAAmCC,UAAAA,aAAa,EAAE;AAAlD,SAAd,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqFC,IAAI,CAACC,KAAL,CAAW1B,QAAQ,CAAC2B,IAAT,CAAc,CAAd,EAAiBC,IAAjB,CAAsBC,IAAtB,GAA6B,EAAxC,IAA8C,EAAnI,SAJf,EAKG7B,QAAQ,IAAI,6BAAC,qBAAD;AAAc,QAAA,QAAQ,EAAEA,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALf,CADF,CADF,CADF;AAaD;;;EAvD8B8B,gB;;;;AAyDjC,IAAMC,aAAa,GAAGC,oBAAWC,GAAX,CAAe,QAAf,EAAyB9C,OAA/C;;AAGA,IAAM4B,MAAM,GAAGmB,oBAAWC,MAAX,CAAkB;AAC/BnB,EAAAA,SAAS,EAAE;AACToB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BnB,EAAAA,cAAc,EAAE;AAEdoB,IAAAA,OAAO,EAAE,MAFK;AAGdC,IAAAA,SAAS,EAAE,GAHG;AAIdC,IAAAA,cAAc,EAAE;AAJF,GALe;AAW/BnB,EAAAA,IAAI,EAAE;AACJoB,IAAAA,KAAK,EAAE,OADH;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJnB,IAAAA,QAAQ,EAAE,EAHN;AAIJoB,IAAAA,eAAe,EAAE;AAJb,GAXyB;AAiB/B1B,EAAAA,KAAK,EAAE;AACLmB,IAAAA,IAAI,EAAE,CADD;AAELQ,IAAAA,UAAU,EAAE;AAFP;AAjBwB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, View, Text, ImageBackground, Dimensions , ActivityIndicator, Image} from 'react-native';\r\nimport MyGetLocation from '../../components/GetLocation';\r\nimport ForecastList from '../../components/ForecastList';\r\n\r\nimport * as Location from 'expo-location';\r\nimport * as Permissions from 'expo-permissions';\r\n\r\n// import Geolocation from '@react-native-community/geolocation';\r\nimport autoBind from 'react-autobind';\r\n// import Geocoder from 'react-native-geocoding';  \r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    autoBind(this);\r\n    this.state = {\r\n      location: { lat: 31, lng: 34 },\r\n      loading: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getLocationAsync();\r\n  }\r\n  getLocationAsync = async () => {\r\n    let { status } = await Permissions.askAsync(Permissions.LOCATION);\r\n    if (status !== 'granted') {\r\n      this.setState({\r\n        errorMessage: 'Permission  to access location was denied',\r\n      });\r\n    }\r\n\r\n    let location = await Location.getCurrentPositionAsync({ accuracy: Location.Accuracy.Highest });\r\n    const { latitude, longitude } = location.coords;\r\n    // let url = 'api.openweathermap.org/data/2.5/forecast/daily?lat='+{latitude}+'&lon='+{longitude}+'&cnt=7&appid=34026f1820a73bd0d6e38e6c9931d3e5'\r\n\r\n      let url = 'https://api.openweathermap.org/data/2.5/forecast?lat=' +\r\n      latitude + '&lon=' + longitude + '&units=metric&appid=34026f1820a73bd0d6e38e6c9931d3e5';\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('this.props.location-------');\r\n        console.log(data);\r\n        this.setState({ forecast: data, location: { lat: latitude, lng: longitude }, address: data.city.name,loading: false });\r\n      });\r\n  };\r\n  render() {\r\n    const { address, location, forecast, loading } = this.state;\r\n    var date = new Date();\r\n    var hours = date.getHours();\r\n    console.log(hours);\r\n    const imageURI = { uri: `https://cdn.dribbble.com/users/925716/screenshots/3333720/attachments/${hours < 4 || hours > 19 ? '722375/night.png' : '722376/after_noon.png'}` };\r\n    const locatiovIconURI ={uri: '../../img/icons8-location-24.png'}\r\n    return (\r\n      <View style={styles.container}>\r\n        <ImageBackground style={styles.image} source={imageURI}>\r\n          <View style={styles.innerContainer}>\r\n          {loading&&<ActivityIndicator size=\"small\" color=\"white\" />}\r\n          <Image style={{ width: 40, height: 40 }} source={locatiovIconURI} />\r\n            <Text style={styles.text}>{address}</Text>\r\n            {forecast && <Text style={[styles.text, { fontWeight: '500', fontSize: 70, paddingBottom: 10 }]}>{Math.round(forecast.list[0].main.temp * 10) / 10}&#176;</Text>}\r\n            {forecast && <ForecastList forecast={forecast} />}\r\n          </View>\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst windowHighest = Dimensions.get('window').Highest;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5FCFF',\r\n  },\r\n  innerContainer: {\r\n    // flexDirection: 'column-reverse',\r\n    display: 'flex',\r\n    marginTop: 200,\r\n    justifyContent: 'center'\r\n  },\r\n  text: {\r\n    color: 'white',\r\n    alignSelf: 'center',\r\n    fontSize: 20,\r\n    paddingVertical: 5,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n  },\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"script"}